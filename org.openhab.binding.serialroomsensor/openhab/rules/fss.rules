// Regeln werden mit Hilfe von Xtend definiert  

rule DoorBellRings
when
	Item GF_EA_Doorbell changed to ON
then
	sendCommand(GF_EA_DoorBellSound, "http://NB-P-RICHTER:8081/static/doorbell.mp3")	
	sendCommand(FF_CR_DoorbellL, 'SELECT')
end

rule BrightnessChanged
when
	Item FF_CR_Brightness changed
then
	var Number scene = FF_CR_LightScene.state as DecimalType
	var Number brightness = FF_CR_Brightness.state as DecimalType
	var Number currentLightBrightness = FF_CR_LightBrightness.state as DecimalType
	if (scene == 0) {
		if (brightness < 20 && currentLightBrightness != 10) {
			sendCommand(FF_CR_LightTemperature, 100);
			sendCommand(FF_CR_LightBrightness, 10);
		} else if (brightness > 25 && currentLightBrightness != 0) {
			sendCommand(FF_CR_LightBrightness, 0)
		}
	}
end

rule LightSceneChangedOn
when
	Item FF_CR_LightScene received command
then

	var Number scene = FF_CR_LightScene.state as DecimalType
	
	// Normal light
	if (scene == 1) {
		sendCommand(FF_CR_Effect, OFF)
		sendCommand(FF_CR_LightTemperature, 100);
		sendCommand(FF_CR_LightBrightness, 80);
		postUpdate(FF_CR_WorkLight, OFF)
		postUpdate(FF_CR_MovieLight, OFF)
		postUpdate(FF_CR_AllOff, OFF)
	// Work light
	} else if (scene == 2) {
		sendCommand(FF_CR_Effect, OFF)
		sendCommand(FF_CR_LightTemperature, 0);
		sendCommand(FF_CR_LightBrightness, 100);
		postUpdate(FF_CR_NormalLight, OFF)
		postUpdate(FF_CR_MovieLight, OFF)
		postUpdate(FF_CR_AllOff, OFF)
	// Passive light
	} else if (scene == 3) {
		sendCommand(FF_CR_Effect, ON)
		sendCommand(FF_CR_LightBrightness, 50);
		sendCommand(FF_CR_LightTemperature, 0);
		postUpdate(FF_CR_NormalLight, OFF)
		postUpdate(FF_CR_WorkLight, OFF)
		postUpdate(FF_CR_AllOff, OFF)
	// light off
	} else if (scene == 0) {
		if (FF_CR_Brightness.state instanceof DecimalType) {
			var Number brightness = FF_CR_Brightness.state as DecimalType
			if (brightness < 20) {
				sendCommand(FF_CR_LightTemperature, 100);
				sendCommand(FF_CR_LightBrightness, 10);
			} else if (brightness > 25) {
				sendCommand(FF_CR_LightBrightness, 0)
			}
		} else {
			sendCommand(FF_CR_LightBrightness, 0)
		}
	}
end

rule DashButtonPushed
when 
	Channel "amazondashbutton:dashbutton:50-f5-da-79-96-eb:press" triggered	
then
	if (FF_CR_LightScene.state > 0) {
		sendCommand(FF_CR_LightScene, 0)
		postUpdate(FF_CR_LightScene, 0)
	} else {
		sendCommand(FF_CR_LightScene, 1)
		postUpdate(FF_CR_LightScene, 1)
	}
end

rule MusicGenreChanged
when 
	Item FF_CR_MusicGenre received command
then

	var Number genre = FF_CR_MusicGenre.state as DecimalType
	
	// Off
	if (genre == 0) {
		sendCommand(FF_CR_Stop, ON)
	// Rock
	} else if (genre == 1) {
		sendCommand(FF_CR_PlayURI, "http://NB-P-RICHTER:8081/static/rock.mp3")
		// sendCommand(FF_CR_PlayURI, "http://NB-P-RICHTER:8080/static/rock.mp3")
		postUpdate(FF_CR_PopMusic, OFF)
		postUpdate(FF_CR_AllOff, OFF)
	// Poop
	} else if (genre == 2) {
		sendCommand(FF_CR_PlayURI, "http://NB-P-RICHTER:8081/static/pop.mp3"
		// sendCommand(FF_CR_PlayURI, "http://NB-P-RICHTER:8080/static/pop.mp3"
		postUpdate(FF_CR_RockMusic, OFF)
		postUpdate(FF_CR_AllOff, OFF)
	}
end

rule AllOff
when 
	Item FF_CR_AllOff received command ON
then
	sendCommand(FF_CR_Stop, ON)
	if (FF_CR_Effect.state == ON) {
		sendCommand(FF_CR_Effect, OFF)
	}
	sendCommand(FF_CR_LightBrightness, 0)		
	postUpdate(FF_CR_NormalLight, OFF)
	postUpdate(FF_CR_MovieLight, OFF)
	postUpdate(FF_CR_WorkLight, OFF)
	postUpdate(FF_CR_RockMusic, OFF)
	postUpdate(FF_CR_PopMusic, OFF)
	postUpdate(FF_CR_LightScene, 0)
	postUpdate(FF_CR_MusicGenre, 0)
end

rule VoiceCommandReceived
when
	Item VoiceCommand received command
then
	var String command = VoiceCommand.state.toString.toLowerCase
	if (command.equals("licht an")) {
		sendCommand(FF_CR_LightScene, 1)
	} else if (command.equals("licht aus")) {
		sendCommand(FF_CR_LightScene, 0)
	} else if (command.equals("arbeitslicht an")) {
		sendCommand(FF_CR_LightScene, 2)
	} else if (command.equals("filmlicht an") || command.equals("film licht an")) {
		sendCommand(FF_CR_LightScene, 3)
	} else if (command.equals("spiele rock")) {
		sendCommand(FF_CR_MusicGenre, 1)
	} else if (command.equals("spiele pop")) {
		sendCommand(FF_CR_MusicGenre, 2)
	} else if (command.equals("musik aus") || command.equals("musikhaus")) {
		sendCommand(FF_CR_MusicGenre, 0)
	} else if (command.equals("alles aus")) {
		sendCommand(FF_CR_AllOff, ON)
	} else if (command.equals("es klingelt")) {
		sendCommand(GF_EA_Doorbell, ON)
	}
end	
	
rule AfterOpenHABStarted
when
	System started
then
	sendCommand(GF_EA_DoorBellVolume, 45)
	postUpdate(FF_CR_Scene, 0)
end
